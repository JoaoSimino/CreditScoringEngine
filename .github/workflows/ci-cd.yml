# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  #alterando main para master apenas para desativar temporariamente meu CI, finalizando configracao do projeto devo voltar para main!!!
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-release:
    runs-on: self-hosted

    env:
      DOTNET_VERSION: '8.0.x'
      ASPNETCORE_ENVIRONMENT: 'Test' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # o ambiente DOTNET ja deve estar instalado na maquina host que estara rodando os jobs!
      - name: Restore dependencies
        run: dotnet restore CreditScoringEngine.sln

      - name: Build solution
        run: dotnet build CreditScoringEngine.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test CreditScoringEngine.sln --configuration Release --no-build --verbosity normal

      #- name: Publish package
      #  run: dotnet publish CreditScoringEngine.API/CreditScoringEngine.API.csproj --configuration Release --output ./publish

      #- name: Archive package
      #  run: Compress-Archive -Path ./publish/* -DestinationPath ./CreditScoringEngine.zip
      #  shell: powershell  

      #- name: Create Release Version Tag
      #  id: tag
      #  run: |
      #    $version = "v1.0.$([int](Get-Date -UFormat %s))"
      #    echo "RELEASE_TAG=$version" >> $env:GITHUB_ENV
      #    echo "::set-output name=version::$version"
      #  shell: powershell

      #- name: Create GitHub Release
      #  uses: softprops/action-gh-release@v2
      #  with:
      #    tag_name: ${{ env.RELEASE_TAG }}
      #    name: Release ${{ env.RELEASE_TAG }}
      #    files: CreditScoringEngine.zip
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build Docker image
        run: docker build -f ./CreditScoringEngine.API/Docker/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/creditscoringengine-api:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/desafio-tecnico-api:latest

