// <auto-generated />
using System;
using CreditScoringEngine.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditScoringEngine.Infrastructure.Migrations
{
    [DbContext(typeof(CreditScoringEngineContext))]
    [Migration("20250707164104_AdcionandoDemaisEntidadesERelacoes")]
    partial class AdcionandoDemaisEntidadesERelacoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditScoringEngine.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HistoricoCreditoSimulado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PropostaCreditoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RendaMensal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CreditScoringEngine.Domain.Entities.PropostaCredito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataProposta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificativa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorSolicitado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("PropostasCredito");
                });

            modelBuilder.Entity("CreditScoringEngine.Domain.Entities.PropostaCredito", b =>
                {
                    b.HasOne("CreditScoringEngine.Domain.Entities.Cliente", "Cliente")
                        .WithOne("PropostaCredito")
                        .HasForeignKey("CreditScoringEngine.Domain.Entities.PropostaCredito", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CreditScoringEngine.Domain.Entities.ScoreInterno", "Score", b1 =>
                        {
                            b1.Property<Guid>("PropostaCreditoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Faixa")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ScoreFaixa");

                            b1.Property<int>("Valor")
                                .HasColumnType("int")
                                .HasColumnName("ScoreValor");

                            b1.HasKey("PropostaCreditoId");

                            b1.ToTable("PropostasCredito");

                            b1.WithOwner()
                                .HasForeignKey("PropostaCreditoId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Score")
                        .IsRequired();
                });

            modelBuilder.Entity("CreditScoringEngine.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("PropostaCredito")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
